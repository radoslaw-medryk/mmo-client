{"version":3,"sources":["webpack://mmo-client/./src/utils/randomColor.ts","webpack://mmo-client/./src/utils/randomNumber.ts","webpack://mmo-client/./src/utils/sure.ts","webpack://mmo-client/./src/visual/canvas/Canvas.ts","webpack://mmo-client/./src/visual/chunk/Chunk.ts","webpack://mmo-client/./src/visual/layer/Layer.ts","webpack://mmo-client/./src/visual/logic/getBufferedViewPortGamePxCoords.ts","webpack://mmo-client/./src/visual/logic/getChunkPosition.ts","webpack://mmo-client/./src/visual/logic/getGamePxPosition.ts","webpack://mmo-client/./src/visual/logic/getViewPortGamePxCoords.ts","webpack://mmo-client/./src/visual/mountable/Mountable.ts","webpack://mmo-client/./src/visual/sprites/Sprite.ts","webpack://mmo-client/./src/visual/sprites/sprites.ts","webpack://mmo-client/./src/visual/viewport/ViewPort.ts","webpack://mmo-client/webpack/bootstrap","webpack://mmo-client/webpack/runtime/global","webpack://mmo-client/webpack/runtime/make namespace object","webpack://mmo-client/webpack/runtime/publicPath","webpack://mmo-client/./src/index.ts"],"names":["r","randomNumber","g","b","toString","padStart","min","max","Math","floor","random","value","Error","visualConsts","canvas","document","createElement","tileSize","chunkSize","canvasPxSizeWidth","pxWidth","tilesWidth","canvasPxSizeHeight","pxHeight","tilesHeight","width","height","context","sure","getContext","mount","parent","this","unmount","__fillTile","tileX","tileY","color","canvasPxX","canvasPxY","fillStyle","fillRect","text","strokeStyle","font","fillText","strokeText","drawSprite","sprite","position","drawOnContext","Mountable","Canvas","chunkSettings","container","className","getGamePxPosition","gamePxX","gamePxY","style","left","top","__fillChunk","x","y","randomColor","chunkPxWidth","chunkPxHeight","i","pxX","pxY","sprites","palm","Chunk","chunks","layerState","center","centerOn","syncChunks","topLeft","getViewPortGamePxCoords","viewPort","bufferedViewPort","getBufferedViewPortGamePxCoords","bufferedViewPortTopLeftChunk","getChunkPosition","bufferedViewPortBottomRightChunk","bottomRight","removeChunksOutside","createMissingChunksInside","topLeftChunk","bottomRightChunk","length","chunk","chunkPosX","chunksX","chunkPosY","chunksY","console","log","splice","chunkX","chunkY","some","q","push","Layer","bufferSizePx","gamePxPosition","chunkPosition","viewPortSize","viewPortGamePxWidth","viewPortGamePxHeight","current","appendChild","removeChild","undefined","path","img","loaded","Promise","resolve","reject","addEventListener","src","drawImage","Sprite","viewPortPxWidth","viewPortPxHeight","layer","ViewPort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","globalThis","Function","e","window","Symbol","toStringTag","Object","defineProperty","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","replace","p","root","body","viewport","code","dx","dy"],"mappings":"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","file":"index.js","sourcesContent":["import { randomNumber } from \"./randomNumber\";\n\nexport function randomColor() {\n    const r = randomNumber(0, 256);\n    const g = randomNumber(0, 256);\n    const b = randomNumber(0, 256);\n\n    const rx = r.toString(16).padStart(2, \"0\");\n    const gx = g.toString(16).padStart(2, \"0\");\n    const bx = b.toString(16).padStart(2, \"0\");\n\n    return `#${rx}${gx}${bx}`;\n}\n","export function randomNumber(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","export function sure<T>(value: T | null | undefined): T {\n    if (value === null || value === undefined) {\n        throw new Error(\"value === null || value === undefined\");\n    }\n\n    return value;\n}\n","import { PxPosition } from \"../../models/PxPosition\";\nimport { randomNumber } from \"../../utils/randomNumber\";\nimport { sure } from \"../../utils/sure\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { Sprite } from \"../sprites/Sprite\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport class Canvas extends Mountable {\n    private visualConsts: VisualConsts;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.visualConsts = visualConsts;\n\n        this.canvas = document.createElement(\"canvas\");\n\n        const { tileSize, chunkSize } = visualConsts;\n        const canvasPxSizeWidth = tileSize.pxWidth * chunkSize.tilesWidth;\n        const canvasPxSizeHeight = tileSize.pxHeight * chunkSize.tilesHeight;\n\n        this.canvas.width = canvasPxSizeWidth;\n        this.canvas.height = canvasPxSizeHeight;\n\n        this.context = sure(this.canvas.getContext(\"2d\"));\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.canvas);\n    }\n\n    public unmount() {\n        super.unmount(this.canvas);\n    }\n\n    public __fillTile(tileX: number, tileY: number, color: string) {\n        const { tileSize } = this.visualConsts;\n\n        const canvasPxX = tileSize.pxWidth * tileX;\n        const canvasPxY = tileSize.pxHeight * tileY;\n\n        this.context.fillStyle = color;\n        this.context.fillRect(canvasPxX, canvasPxY, tileSize.pxWidth, tileSize.pxHeight);\n\n        const text = `${tileX} / ${tileY}`;\n        this.context.strokeStyle = \"#444\";\n        this.context.fillStyle = \"#fff\";\n        this.context.font = \"32px Arial\";\n        this.context.fillText(text, canvasPxX + 20, canvasPxY + 60);\n        this.context.strokeText(text, canvasPxX + 20, canvasPxY + 60);\n    }\n\n    public async drawSprite(sprite: Sprite, position: PxPosition) {\n        await sprite.drawOnContext(this.context, position);\n    }\n}\n","import { getGamePxPosition } from \"../logic/getGamePxPosition\";\nimport { Canvas } from \"../canvas/Canvas\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\nimport { ChunkSettings } from \"./ChunkSettings\";\nimport { randomColor } from \"../../utils/randomColor\";\nimport { PxPosition } from \"../../models/PxPosition\";\nimport { randomNumber } from \"../../utils/randomNumber\";\nimport { sprites } from \"../sprites/sprites\";\n\nexport class Chunk extends Mountable {\n    private visualConsts: VisualConsts;\n    private container: HTMLDivElement;\n    private canvas: Canvas;\n\n    public chunkSettings: ChunkSettings;\n\n    constructor(visualConsts: VisualConsts, chunkSettings: ChunkSettings) {\n        super();\n\n        this.visualConsts = visualConsts;\n        this.chunkSettings = chunkSettings;\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-chunk\";\n\n        const { gamePxX, gamePxY } = getGamePxPosition(visualConsts, chunkSettings.position);\n        this.container.style.left = `${gamePxX}px`;\n        this.container.style.top = `${gamePxY}px`;\n\n        this.canvas = new Canvas(visualConsts);\n        this.canvas.mount(this.container);\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n\n    public async __fillChunk() {\n        for (let x = 0; x < 6; x++) {\n            for (let y = 0; y < 6; y++) {\n                this.__fillTile(x, y, randomColor());\n            }\n        }\n\n        const { chunkSize, tileSize } = this.visualConsts;\n        const chunkPxWidth = chunkSize.tilesWidth * tileSize.pxWidth;\n        const chunkPxHeight = chunkSize.tilesHeight * tileSize.pxHeight;\n\n        for (let i = 0; i < 5; i++) {\n            const position: PxPosition = {\n                pxX: randomNumber(0, chunkPxWidth),\n                pxY: randomNumber(0, chunkPxHeight),\n            };\n            await this.canvas.drawSprite(sprites.palm, position);\n        }\n    }\n\n    private __fillTile(tileX: number, tileY: number, color: string) {\n        this.canvas.__fillTile(tileX, tileY, color);\n    }\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { randomColor } from \"../../utils/randomColor\";\nimport { Chunk } from \"../chunk/Chunk\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\nimport { LayerState } from \"./LayerState\";\nimport { getChunkPosition } from \"../logic/getChunkPosition\";\nimport { getViewPortGamePxCoords } from \"../logic/getViewPortGamePxCoords\";\nimport { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { getBufferedViewPortGamePxCoords } from \"../logic/getBufferedViewPortGamePxCoords\";\n\nexport class Layer extends Mountable {\n    private container: HTMLDivElement;\n    private chunks: Chunk[] = [];\n\n    private visualConsts: VisualConsts;\n    private layerState: LayerState;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.visualConsts = visualConsts;\n\n        this.layerState = {\n            center: {\n                gamePxX: 0,\n                gamePxY: 0,\n            },\n        };\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-layer\";\n\n        this.centerOn(this.layerState.center);\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n\n    public centerOn(position: GamePxPosition) {\n        const { gamePxX, gamePxY } = position;\n        this.layerState.center.gamePxX = gamePxX;\n        this.layerState.center.gamePxY = gamePxY;\n\n        this.syncChunks();\n\n        const { topLeft } = getViewPortGamePxCoords(this.visualConsts, this.layerState);\n\n        this.container.style.left = `${-topLeft.gamePxX}px`;\n        this.container.style.top = `${-topLeft.gamePxY}px`;\n    }\n\n    private syncChunks() {\n        const viewPort = getViewPortGamePxCoords(this.visualConsts, this.layerState);\n        const bufferedViewPort = getBufferedViewPortGamePxCoords(this.visualConsts, viewPort);\n\n        const bufferedViewPortTopLeftChunk = getChunkPosition(this.visualConsts, bufferedViewPort.topLeft);\n        const bufferedViewPortBottomRightChunk = getChunkPosition(this.visualConsts, bufferedViewPort.bottomRight);\n\n        this.removeChunksOutside(bufferedViewPortTopLeftChunk, bufferedViewPortBottomRightChunk);\n        this.createMissingChunksInside(bufferedViewPortTopLeftChunk, bufferedViewPortBottomRightChunk);\n    }\n\n    private removeChunksOutside(topLeftChunk: ChunkPosition, bottomRightChunk: ChunkPosition) {\n        for (let i = this.chunks.length - 1; i >= 0; i--) {\n            const chunk = this.chunks[i];\n            const chunkPosX = chunk.chunkSettings.position.chunksX;\n            const chunkPosY = chunk.chunkSettings.position.chunksY;\n\n            if (\n                chunkPosX < topLeftChunk.chunksX ||\n                chunkPosX > bottomRightChunk.chunksX ||\n                chunkPosY < topLeftChunk.chunksY ||\n                chunkPosY > bottomRightChunk.chunksY\n            ) {\n                console.log(`>>> REMOVING CHUNK [${chunkPosX}, ${chunkPosY}]`);\n                this.chunks[i].unmount();\n                this.chunks.splice(i, 1);\n            }\n        }\n    }\n\n    private createMissingChunksInside(topLeftChunk: ChunkPosition, bottomRightChunk: ChunkPosition) {\n        for (let chunkX = topLeftChunk.chunksX; chunkX <= bottomRightChunk.chunksX; chunkX++) {\n            for (let chunkY = topLeftChunk.chunksY; chunkY <= bottomRightChunk.chunksY; chunkY++) {\n                const isAlready = this.chunks.some(\n                    q => q.chunkSettings.position.chunksX === chunkX && q.chunkSettings.position.chunksY === chunkY\n                );\n\n                if (isAlready) {\n                    continue;\n                }\n\n                console.log(`>>> CREATING CHUNK [${chunkX}, ${chunkY}]`);\n\n                const chunk = new Chunk(this.visualConsts, {\n                    position: {\n                        chunksX: chunkX,\n                        chunksY: chunkY,\n                    },\n                });\n                chunk.mount(this.container);\n                chunk.__fillChunk();\n                this.chunks.push(chunk);\n            }\n        }\n    }\n}\n","import { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { GamePxRectangle } from \"../../models/GamePxRectangle\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getBufferedViewPortGamePxCoords(\n    visualConsts: VisualConsts,\n    viewPort: GamePxRectangle\n): GamePxRectangle {\n    const { bufferSizePx } = visualConsts;\n\n    const topLeft: GamePxPosition = {\n        gamePxX: viewPort.topLeft.gamePxX - bufferSizePx,\n        gamePxY: viewPort.topLeft.gamePxY - bufferSizePx,\n    };\n\n    const bottomRight: GamePxPosition = {\n        gamePxX: viewPort.bottomRight.gamePxX + bufferSizePx,\n        gamePxY: viewPort.bottomRight.gamePxY + bufferSizePx,\n    };\n\n    return {\n        topLeft,\n        bottomRight,\n    };\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getChunkPosition(visualConsts: VisualConsts, gamePxPosition: GamePxPosition): ChunkPosition {\n    const { chunkSize, tileSize } = visualConsts;\n\n    const chunkPxWidth = chunkSize.tilesWidth * tileSize.pxWidth;\n    const chunkPxHeight = chunkSize.tilesHeight * tileSize.pxHeight;\n\n    const { gamePxX, gamePxY } = gamePxPosition;\n    const chunksX = Math.floor(gamePxX / chunkPxWidth);\n    const chunksY = Math.floor(gamePxY / chunkPxHeight);\n\n    return {\n        chunksX,\n        chunksY,\n    };\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getGamePxPosition(visualConsts: VisualConsts, chunkPosition: ChunkPosition): GamePxPosition {\n    const { chunkSize, tileSize } = visualConsts;\n    const { chunksX, chunksY } = chunkPosition;\n\n    const chunkPxWidth = chunkSize.tilesWidth * tileSize.pxWidth;\n    const chunkPxHeight = chunkSize.tilesHeight * tileSize.pxHeight;\n\n    const gamePxX = chunksX * chunkPxWidth;\n    const gamePxY = chunksY * chunkPxHeight;\n\n    return {\n        gamePxX,\n        gamePxY,\n    };\n}\n","import { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { GamePxRectangle } from \"../../models/GamePxRectangle\";\nimport { LayerState } from \"../layer/LayerState\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getViewPortGamePxCoords(visualConsts: VisualConsts, layerState: LayerState): GamePxRectangle {\n    const { center } = layerState;\n    const { viewPortSize, tileSize } = visualConsts;\n\n    const viewPortGamePxWidth = viewPortSize.tilesWidth * tileSize.pxWidth;\n    const viewPortGamePxHeight = viewPortSize.tilesHeight * tileSize.pxHeight;\n\n    const topLeft: GamePxPosition = {\n        gamePxX: Math.floor(center.gamePxX - viewPortGamePxWidth / 2),\n        gamePxY: Math.floor(center.gamePxY - viewPortGamePxHeight / 2),\n    };\n\n    const bottomRight: GamePxPosition = {\n        gamePxX: topLeft.gamePxX + viewPortGamePxWidth,\n        gamePxY: topLeft.gamePxY + viewPortGamePxHeight,\n    };\n\n    return {\n        topLeft,\n        bottomRight,\n    };\n}\n","export class Mountable {\n    private parent?: HTMLElement;\n    private current?: HTMLElement;\n\n    public mount(parent: HTMLElement, current: HTMLElement) {\n        if (this.parent) {\n            throw new Error(\"Already mounted\");\n        }\n\n        parent.appendChild(current);\n        this.parent = parent;\n        this.current = current;\n    }\n\n    public unmount(current: HTMLElement) {\n        if (!this.parent || !this.current) {\n            return;\n        }\n\n        this.parent.removeChild(current);\n        this.parent = undefined;\n        this.current = undefined;\n    }\n}\n","import { PxPosition } from \"../../models/PxPosition\";\n\nexport class Sprite {\n    private img: HTMLImageElement;\n\n    private loaded: Promise<void>;\n\n    constructor(path: string) {\n        this.img = document.createElement(\"img\");\n\n        this.loaded = new Promise((resolve, reject) => {\n            this.img.addEventListener(\"error\", reject);\n            this.img.addEventListener(\"load\", () => resolve());\n        });\n\n        this.img.src = path;\n    }\n\n    public async drawOnContext(context: CanvasRenderingContext2D, position: PxPosition) {\n        await this.loaded;\n\n        const { pxX, pxY } = position;\n\n        context.drawImage(this.img, pxX, pxY);\n    }\n}\n","import { Sprite } from \"./Sprite\";\n\nexport const sprites = {\n    palm: new Sprite(require(\"../../assets/sprites/palm.png\")),\n};\n","import { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { Layer } from \"../layer/Layer\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport class ViewPort extends Mountable {\n    private container: HTMLDivElement;\n    private layer: Layer;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-viewport\";\n\n        const { viewPortSize, tileSize } = visualConsts;\n        const viewPortPxWidth = viewPortSize.tilesWidth * tileSize.pxWidth;\n        const viewPortPxHeight = viewPortSize.tilesHeight * tileSize.pxHeight;\n        this.container.style.width = `${viewPortPxWidth}px`;\n        this.container.style.height = `${viewPortPxHeight}px`;\n\n        this.layer = new Layer(visualConsts);\n        this.layer.mount(this.container);\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n\n    public centerOn(position: GamePxPosition) {\n        this.layer.centerOn(position);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import \"./index.scss\";\nimport { ViewPort } from \"./visual/viewport/ViewPort\";\n\nconst root = document.createElement(\"div\");\ndocument.body.appendChild(root);\n\nconst viewport = new ViewPort({\n    bufferSizePx: 256,\n    tileSize: {\n        pxWidth: 128,\n        pxHeight: 128,\n    },\n    viewPortSize: {\n        tilesWidth: 6,\n        tilesHeight: 6,\n    },\n    chunkSize: {\n        tilesWidth: 6,\n        tilesHeight: 6,\n    },\n});\n\nviewport.mount(root);\n\nlet x = 0;\nlet y = 0;\n\ndocument.addEventListener(\"keydown\", ({ code }) => {\n    const d = 20;\n    let dx = 0;\n    let dy = 0;\n\n    switch (code) {\n        case \"ArrowUp\":\n            dy = -d;\n            break;\n\n        case \"ArrowDown\":\n            dy = d;\n            break;\n\n        case \"ArrowLeft\":\n            dx = -d;\n            break;\n\n        case \"ArrowRight\":\n            dx = d;\n            break;\n\n        default:\n            return;\n    }\n\n    x += dx;\n    y += dy;\n    console.log(`CODE: ${code}, x: ${x}, y: ${y}`);\n\n    viewport.centerOn({ gamePxX: x, gamePxY: y });\n});\n\nconsole.log(\"Hello world\");\n"],"sourceRoot":""}
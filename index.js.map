{"version":3,"sources":["webpack://mmo-client/./src/utils/randomColor.ts","webpack://mmo-client/./src/utils/randomNumber.ts","webpack://mmo-client/./src/utils/sure.ts","webpack://mmo-client/./src/visual/canvas/Canvas.ts","webpack://mmo-client/./src/visual/chunk/Chunk.ts","webpack://mmo-client/./src/visual/layer/Layer.ts","webpack://mmo-client/./src/visual/logic/getChunkPosition.ts","webpack://mmo-client/./src/visual/logic/getGamePxPosition.ts","webpack://mmo-client/./src/visual/logic/getViewPortGamePxCoords.ts","webpack://mmo-client/./src/visual/mountable/Mountable.ts","webpack://mmo-client/./src/visual/viewport/ViewPort.ts","webpack://mmo-client/webpack/bootstrap","webpack://mmo-client/webpack/runtime/make namespace object","webpack://mmo-client/./src/index.ts"],"names":["r","randomNumber","g","b","toString","padStart","min","max","Math","floor","random","value","Error","visualConsts","canvas","document","createElement","tileSize","chunkSize","canvasPxSizeWidth","pxWidth","tilesWidth","canvasPxSizeHeight","pxHeight","tilesHeight","width","height","context","sure","getContext","mount","parent","this","unmount","fillTile","tileX","tileY","color","canvasPxX","canvasPxY","fillStyle","fillRect","text","strokeStyle","font","fillText","strokeText","Mountable","Canvas","chunkSettings","container","className","getGamePxPosition","position","gamePxX","gamePxY","style","left","top","Chunk","chunks","layerState","center","topLeft","getViewPortGamePxCoords","syncChunks","viewPort","viewPortTopLeftChunk","getChunkPosition","viewPortBottomRightChunk","bottomRight","removeChunksOutside","createMissingChunksInside","__paintChunksRandomly","chunk","x","y","randomColor","topLeftChunk","bottomRightChunk","i","length","chunkPosX","chunksX","chunkPosY","chunksY","console","log","splice","chunkX","chunkY","some","q","push","Layer","gamePxPosition","chunkPxWidth","chunkPxHeight","chunkPosition","viewPortSize","viewPortGamePxWidth","viewPortGamePxHeight","current","appendChild","removeChild","undefined","viewPortPxWidth","viewPortPxHeight","layer","ViewPort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","Symbol","toStringTag","Object","defineProperty","root","body"],"mappings":"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","file":"index.js","sourcesContent":["import { randomNumber } from \"./randomNumber\";\n\nexport function randomColor() {\n    const r = randomNumber(0, 256);\n    const g = randomNumber(0, 256);\n    const b = randomNumber(0, 256);\n\n    const rx = r.toString(16).padStart(2, \"0\");\n    const gx = g.toString(16).padStart(2, \"0\");\n    const bx = b.toString(16).padStart(2, \"0\");\n\n    return `#${rx}${gx}${bx}`;\n}\n","export function randomNumber(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","export function sure<T>(value: T | null | undefined): T {\n    if (value === null || value === undefined) {\n        throw new Error(\"value === null || value === undefined\");\n    }\n\n    return value;\n}\n","import { sure } from \"../../utils/sure\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport class Canvas extends Mountable {\n    private visualConsts: VisualConsts;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.visualConsts = visualConsts;\n\n        this.canvas = document.createElement(\"canvas\");\n\n        const { tileSize, chunkSize } = visualConsts;\n        const canvasPxSizeWidth = tileSize.pxWidth * chunkSize.tilesWidth;\n        const canvasPxSizeHeight = tileSize.pxHeight * chunkSize.tilesHeight;\n\n        this.canvas.width = canvasPxSizeWidth;\n        this.canvas.height = canvasPxSizeHeight;\n\n        this.context = sure(this.canvas.getContext(\"2d\"));\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.canvas);\n    }\n\n    public unmount() {\n        super.unmount(this.canvas);\n    }\n\n    public fillTile(tileX: number, tileY: number, color: string) {\n        const { tileSize } = this.visualConsts;\n\n        const canvasPxX = tileSize.pxWidth * tileX;\n        const canvasPxY = tileSize.pxHeight * tileY;\n\n        this.context.fillStyle = color;\n        this.context.fillRect(canvasPxX, canvasPxY, tileSize.pxWidth, tileSize.pxHeight);\n\n        const text = `${tileX} / ${tileY}`;\n        this.context.strokeStyle = \"#444\";\n        this.context.fillStyle = \"#fff\";\n        this.context.font = \"32px Arial\";\n        this.context.fillText(text, canvasPxX + 20, canvasPxY + 60);\n        this.context.strokeText(text, canvasPxX + 20, canvasPxY + 60);\n    }\n}\n","import { getGamePxPosition } from \"../logic/getGamePxPosition\";\nimport { Canvas } from \"../canvas/Canvas\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\nimport { ChunkSettings } from \"./ChunkSettings\";\n\nexport class Chunk extends Mountable {\n    private visualConsts: VisualConsts;\n    private container: HTMLDivElement;\n    private canvas: Canvas;\n\n    public chunkSettings: ChunkSettings;\n\n    constructor(visualConsts: VisualConsts, chunkSettings: ChunkSettings) {\n        super();\n\n        this.visualConsts = visualConsts;\n        this.chunkSettings = chunkSettings;\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-chunk\";\n\n        const { gamePxX, gamePxY } = getGamePxPosition(visualConsts, chunkSettings.position);\n        this.container.style.left = `${gamePxX}px`;\n        this.container.style.top = `${gamePxY}px`;\n\n        this.canvas = new Canvas(visualConsts);\n        this.canvas.mount(this.container);\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n\n    public fillTile(tileX: number, tileY: number, color: string) {\n        this.canvas.fillTile(tileX, tileY, color);\n    }\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { randomColor } from \"../../utils/randomColor\";\nimport { Chunk } from \"../chunk/Chunk\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\nimport { LayerState } from \"./LayerState\";\nimport { getChunkPosition } from \"../logic/getChunkPosition\";\nimport { getViewPortGamePxCoords } from \"../logic/getViewPortGamePxCoords\";\n\nexport class Layer extends Mountable {\n    private container: HTMLDivElement;\n    private chunks: Chunk[] = [];\n\n    private visualConsts: VisualConsts;\n    private layerState: LayerState;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.visualConsts = visualConsts;\n\n        this.layerState = {\n            center: {\n                gamePxX: 0,\n                gamePxY: 0,\n            },\n        };\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-layer\";\n\n        const { topLeft } = getViewPortGamePxCoords(visualConsts, this.layerState);\n\n        this.container.style.left = `${-topLeft.gamePxX}px`;\n        this.container.style.top = `${-topLeft.gamePxY}px`;\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n\n    public syncChunks() {\n        const viewPort = getViewPortGamePxCoords(this.visualConsts, this.layerState);\n\n        const viewPortTopLeftChunk = getChunkPosition(this.visualConsts, viewPort.topLeft);\n        const viewPortBottomRightChunk = getChunkPosition(this.visualConsts, viewPort.bottomRight);\n\n        this.removeChunksOutside(viewPortTopLeftChunk, viewPortBottomRightChunk);\n        this.createMissingChunksInside(viewPortTopLeftChunk, viewPortBottomRightChunk);\n    }\n\n    // TODO [RM]: temp only\n    public __paintChunksRandomly() {\n        for (const chunk of this.chunks) {\n            for (let x = 0; x < 6; x++) {\n                for (let y = 0; y < 6; y++) {\n                    chunk.fillTile(x, y, randomColor());\n                }\n            }\n        }\n    }\n\n    private removeChunksOutside(topLeftChunk: ChunkPosition, bottomRightChunk: ChunkPosition) {\n        for (let i = this.chunks.length - 1; i >= 0; i--) {\n            const chunk = this.chunks[i];\n            const chunkPosX = chunk.chunkSettings.position.chunksX;\n            const chunkPosY = chunk.chunkSettings.position.chunksY;\n\n            if (\n                chunkPosX < topLeftChunk.chunksX ||\n                chunkPosX > bottomRightChunk.chunksX ||\n                chunkPosY < topLeftChunk.chunksY ||\n                chunkPosY > bottomRightChunk.chunksY\n            ) {\n                console.log(`>>> REMOVING CHUNK [${chunkPosX}, ${chunkPosY}]`);\n                this.chunks.splice(i, 1);\n            }\n        }\n    }\n\n    private createMissingChunksInside(topLeftChunk: ChunkPosition, bottomRightChunk: ChunkPosition) {\n        for (let chunkX = topLeftChunk.chunksX; chunkX <= bottomRightChunk.chunksX; chunkX++) {\n            for (let chunkY = topLeftChunk.chunksY; chunkY <= bottomRightChunk.chunksY; chunkY++) {\n                const isAlready = this.chunks.some(\n                    q => q.chunkSettings.position.chunksX === chunkX && q.chunkSettings.position.chunksY === chunkY\n                );\n\n                if (isAlready) {\n                    continue;\n                }\n\n                console.log(`>>> CREATING CHUNK [${chunkX}, ${chunkY}]`);\n\n                const chunk = new Chunk(this.visualConsts, {\n                    position: {\n                        chunksX: chunkX,\n                        chunksY: chunkY,\n                    },\n                });\n                chunk.mount(this.container);\n                this.chunks.push(chunk);\n            }\n        }\n    }\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getChunkPosition(visualConsts: VisualConsts, gamePxPosition: GamePxPosition): ChunkPosition {\n    const { chunkSize, tileSize } = visualConsts;\n\n    const chunkPxWidth = chunkSize.tilesWidth * tileSize.pxWidth;\n    const chunkPxHeight = chunkSize.tilesHeight * tileSize.pxHeight;\n\n    const { gamePxX, gamePxY } = gamePxPosition;\n    const chunksX = Math.floor(gamePxX / chunkPxWidth);\n    const chunksY = Math.floor(gamePxY / chunkPxHeight);\n\n    return {\n        chunksX,\n        chunksY,\n    };\n}\n","import { ChunkPosition } from \"../../models/ChunkPosition\";\nimport { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport function getGamePxPosition(visualConsts: VisualConsts, chunkPosition: ChunkPosition): GamePxPosition {\n    const { chunkSize, tileSize } = visualConsts;\n    const { chunksX, chunksY } = chunkPosition;\n\n    const chunkPxWidth = chunkSize.tilesWidth * tileSize.pxWidth;\n    const chunkPxHeight = chunkSize.tilesHeight * tileSize.pxHeight;\n\n    const gamePxX = chunksX * chunkPxWidth;\n    const gamePxY = chunksY * chunkPxHeight;\n\n    return {\n        gamePxX,\n        gamePxY,\n    };\n}\n","import { GamePxPosition } from \"../../models/GamePxPosition\";\nimport { LayerState } from \"../layer/LayerState\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport type ViewPortGamePxCoords = {\n    topLeft: GamePxPosition;\n    bottomRight: GamePxPosition;\n};\n\nexport function getViewPortGamePxCoords(visualConsts: VisualConsts, layerState: LayerState): ViewPortGamePxCoords {\n    const { center } = layerState;\n    const { viewPortSize, tileSize } = visualConsts;\n\n    const viewPortGamePxWidth = viewPortSize.tilesWidth * tileSize.pxWidth;\n    const viewPortGamePxHeight = viewPortSize.tilesHeight * tileSize.pxHeight;\n\n    const topLeft: GamePxPosition = {\n        gamePxX: Math.floor(center.gamePxX - viewPortGamePxWidth / 2),\n        gamePxY: Math.floor(center.gamePxY - viewPortGamePxHeight / 2),\n    };\n\n    const bottomRight: GamePxPosition = {\n        gamePxX: topLeft.gamePxX + viewPortGamePxWidth,\n        gamePxY: topLeft.gamePxY + viewPortGamePxHeight,\n    };\n\n    return {\n        topLeft,\n        bottomRight,\n    };\n}\n","export class Mountable {\n    private parent?: HTMLElement;\n    private current?: HTMLElement;\n\n    public mount(parent: HTMLElement, current: HTMLElement) {\n        if (this.parent) {\n            throw new Error(\"Already mounted\");\n        }\n\n        parent.appendChild(current);\n        this.parent = parent;\n        this.current = current;\n    }\n\n    public unmount(current: HTMLElement) {\n        if (!this.parent || !this.current) {\n            return;\n        }\n\n        this.parent.removeChild(current);\n        this.parent = undefined;\n        this.current = undefined;\n    }\n}\n","import { Layer } from \"../layer/Layer\";\nimport { Mountable } from \"../mountable/Mountable\";\nimport { VisualConsts } from \"../VisualConsts\";\n\nexport class ViewPort extends Mountable {\n    private container: HTMLDivElement;\n    private layer: Layer;\n\n    constructor(visualConsts: VisualConsts) {\n        super();\n\n        this.container = document.createElement(\"div\");\n        this.container.className = \"mmo-viewport\";\n\n        const { viewPortSize, tileSize } = visualConsts;\n        const viewPortPxWidth = viewPortSize.tilesWidth * tileSize.pxWidth;\n        const viewPortPxHeight = viewPortSize.tilesHeight * tileSize.pxHeight;\n        this.container.style.width = `${viewPortPxWidth}px`;\n        this.container.style.height = `${viewPortPxHeight}px`;\n\n        this.layer = new Layer(visualConsts);\n        this.layer.mount(this.container);\n\n        this.layer.syncChunks();\n        this.layer.__paintChunksRandomly();\n    }\n\n    public mount(parent: HTMLElement) {\n        super.mount(parent, this.container);\n    }\n\n    public unmount() {\n        super.unmount(this.container);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./index.scss\";\nimport { ViewPort } from \"./visual/viewport/ViewPort\";\n\nconst root = document.createElement(\"div\");\ndocument.body.appendChild(root);\n\nconst viewport = new ViewPort({\n    tileSize: {\n        pxWidth: 128,\n        pxHeight: 128,\n    },\n    viewPortSize: {\n        tilesWidth: 6,\n        tilesHeight: 6,\n    },\n    chunkSize: {\n        tilesWidth: 6,\n        tilesHeight: 6,\n    },\n});\n\nviewport.mount(root);\n\nconsole.log(\"Hello world\");\n"],"sourceRoot":""}